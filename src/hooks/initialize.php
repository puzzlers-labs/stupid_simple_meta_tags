<?php

/**
 * Initialize hook for the plugin.
 * This hook is called every time the plugin is loaded.
 * 
 * @author Puzzlers Labs Pvt. Ltd. <tech@puzzlers-labs.com>
 */

require_once SSMT_PLUGIN_PATH . 'pages/settings/index.php';
require_once SSMT_PLUGIN_PATH . 'pages/feedback/index.php';
require_once SSMT_PLUGIN_PATH . 'pages/register_license/index.php';
require_once SSMT_PLUGIN_PATH . 'pages/classic_editor_meta_box/index.php';

function ssmt_initialized() {
    add_action('wp_head', 'ssmt_render_meta_tags');

    add_action('admin_head', 'ssmt_admin_style');
    add_action('admin_menu', 'ssmt_setup_menu');

    register_setting('ssmt_basic_configuration',    'ssmt_basic_configuration_meta_configuration_list', ['type' => 'array']);
    register_setting('ssmt_advanced_settings',      'ssmt_advanced_settings_show_ssmt_branding', ['type' => 'boolean']);
    register_setting('ssmt_advanced_settings',      'ssmt_advanced_settings_enable_caching', ['type' => 'boolean']);
    register_setting('ssmt_advanced_settings',      'ssmt_advanced_settings_use_dynamic_tags', ['type' => 'boolean']);
    register_setting('ssmt_advanced_settings',      'ssmt_advanced_settings_dynamic_tags_configuration_list', ['type' => 'array']);
    register_setting('ssmt_admin_settings',         'ssmt_admin_settings_license_key', ['type' => 'string']);

    add_action('admin_init', 'ssmt_form_submission_validator');
    add_action('init', 'ssmt_register_gutenberg_extension');
    add_action('add_meta_boxes', 'ssmt_classic_editor_add_meta_box');
    add_action('save_post', 'ssmt_classic_editor_save_meta_tags');

    wp_enqueue_style('loading-spinner-css', SSMT_PLUGIN_URL . 'assets/css/loading_spinner.css');

    add_action('wp_ajax_ssmt_validate_license',  'ssmt_register_license_validator');
    add_action('wp_ajax_ssmt_check_for_updates', 'ssmt_new_updates_checker');
}

function ssmt_setup_menu() {
    add_menu_page('Stupid Simple Meta Tags Settings', 'SSMT', 'manage_options', 'ssmt_settings', 'ssmt_settings_init', SSMT_PLUGIN_URL . "assets/images/ssmt_icon.svg");

    add_submenu_page('ssmt_settings',          'SSMT Settings',          'Settings', 'manage_options', 'ssmt_settings',          'ssmt_settings_init');
    add_submenu_page('ssmt_settings',          'SSMT Feedback',          'Feedback', 'manage_options', 'ssmt_settings_feedback', 'ssmt_feedback_init');
    add_submenu_page('ssmt_internal_settings', 'SSMT Register License',  '',         'manage_options', 'ssmt_register_license',  'ssmt_register_license_init');
}

function ssmt_render_meta_tags() {
    $meta_configuration_list = get_option('ssmt_basic_configuration_meta_configuration_list', []);
    $show_ssmt_branding      = get_option('ssmt_advanced_settings_show_ssmt_branding', false);
    $is_licensed             = ssmt_is_licensed();

    if (!$is_licensed || $show_ssmt_branding) {
        echo "<!-- Meta Tags generated by Stupid Simple Meta Tags WordPress plugin - Block Start -->";
    }
    if (is_single() && $is_licensed) {
        $post_id = get_the_ID();
        $post_meta_configuration_list = get_post_meta($post_id, 'ssmt_advanced_settings_gutenberg_data', false);
        var_dump($post_meta_configuration_list);
        exit();
    }
    foreach ($meta_configuration_list as $meta_configuration) {
        $meta_configuration['key']   = trim($meta_configuration['key']);
        $meta_configuration['value'] = trim($meta_configuration['value']);

        if ($meta_configuration['order'] < 0) {
            continue;
        }

        if ($meta_configuration['type'] === 'direct') {
            if (!empty($meta_configuration['value'])) {
                echo $meta_configuration['value'];
            }
        } else {
            if (!empty($meta_configuration['key'])) {
                echo "<meta {$meta_configuration['type']}='{$meta_configuration['key']}' content='{$meta_configuration['value']}' />";
            }
        }
    }
    if (!$is_licensed || $show_ssmt_branding) {
        echo "<!-- Stupid Simple Meta Tags - Block End -->";
    }
}

function ssmt_admin_style() {
    echo '<style>';
    echo '    #adminmenu .toplevel_page_ssmt_settings img {';
    echo '        width: 20px;';
    echo '        height: 20px;';
    echo '        object-fit: contain;';
    echo '    }';
    echo '</style>';
}

function ssmt_register_license_validator() {
    if (!isset($_POST['nonce']) || !wp_verify_nonce($_POST['nonce'], 'ssmt_register_license_validate')) {
        wp_send_json_error(array('message' => 'Invalid nonce'));
    }

    $is_license_valid = ssmt_validate_license();
    if ($is_license_valid) {
        wp_send_json_success(array('license_status' => 'valid'));
    } else {
        wp_send_json_success(array('license_status' => 'invalid'));
    }
    wp_die();
}

function ssmt_new_updates_checker() {
    $is_ssmt_update_available = ssmt_is_update_available();

    if ($is_ssmt_update_available) {
        wp_send_json_success(array('update_available' => true));
    } else {
        wp_send_json_success(array('update_available' => false));
    }
    wp_die();
}

function ssmt_register_gutenberg_extension() {
    add_action('enqueue_block_editor_assets', 'ssmt_gutenberg_editor_extension');
    register_post_meta('', 'ssmt_advanced_settings_gutenberg_data', [
        'type'         => 'object', // Data type
        'single'       => false,    // It is an array of objects
        'show_in_rest' => [
            'schema' => [
                'type' => 'object',
                'properties' => [
                    'order' => [
                        'type'    => 'integer',
                        'required' => true
                    ],
                    'value' => [
                        'type'    => 'string',
                        'required' => false
                    ],
                ]
            ]
        ]
    ]);
}

function ssmt_gutenberg_editor_extension() {
    // Using - instead of _ in the handle name because WordPress doesn't allow _ inside the plugin JS for Gutenberg.
    wp_enqueue_script(
        'ssmt-gutenberg-editor-extension',
        SSMT_PLUGIN_URL . 'assets/js/gutenberg_editor_extension.js',
        array('wp-plugins', 'wp-edit-post', 'wp-components', 'wp-element', 'wp-data'),
        SSMT_VERSION,
        true
    );

    $is_licensed   = ssmt_is_licensed();
    $post_edit_url = '';
    $registration_url = admin_url('admin.php?page=ssmt_register_license');
    if (isset($_GET['post'])) {
        $post_id          = get_the_ID();
        $post_edit_url    = urlencode('post.php?post=' . $post_id . '&action=edit');
        $registration_url = $registration_url . '&return_url=' . $post_edit_url;
    }

    wp_localize_script('ssmt-gutenberg-editor-extension', 'SSMTData', [
        'iconURL'         => SSMT_PLUGIN_URL . 'assets/images/ssmt_icon.svg',
        'isLicensed'      => $is_licensed,
        'registrationURL' => $registration_url,
    ]);
}

function ssmt_classic_editor_add_meta_box() {
    add_meta_box(
        'ssmt_classic_editor_meta_box',
        'Stupid Simple Meta Tags',
        'ssmt_classic_editor_meta_box_render',
        'post',
        'normal',
        'high'
    );
}